"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[314],{3905:function(e,n,t){t.d(n,{Zo:function(){return f},kt:function(){return g}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},f=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,f=a(e,["components","mdxType","originalType","parentName"]),s=l(t),g=i,d=s["".concat(u,".").concat(g)]||s[g]||p[g]||o;return t?r.createElement(d,c(c({ref:n},f),{},{components:t})):r.createElement(d,c({ref:n},f))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,c=new Array(o);c[0]=s;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,c[1]=a;for(var l=2;l<o;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},8776:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return f},default:function(){return s}});var r=t(3117),i=t(102),o=(t(7294),t(3905)),c=["components"],a={},u="Configure",l={unversionedId:"functions/config",id:"functions/config",isDocsHomePage:!1,title:"Configure",description:"Pine can be configured via the configure function, which accepts:",source:"@site/docs/functions/config.md",sourceDirName:"functions",slug:"/functions/config",permalink:"/docs/functions/config",editUrl:"https://github.com/pinefile/pinefile.github.io/edit/develop/docs/functions/config.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Color",permalink:"/docs/functions/color"},next:{title:"Log",permalink:"/docs/functions/log"}},f=[{value:"With object",id:"with-object",children:[],level:2},{value:"With function",id:"with-function",children:[],level:2},{value:"Options",id:"options",children:[],level:2},{value:"Get config",id:"get-config",children:[],level:2}],p={toc:f};function s(e){var n=e.components,t=(0,i.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configure"},"Configure"),(0,o.kt)("p",null,"Pine can be configured via the ",(0,o.kt)("inlineCode",{parentName:"p"},"configure")," function, which accepts:"),(0,o.kt)("h2",{id:"with-object"},"With object"),(0,o.kt)("p",null,"The object will be merged into the existing configuration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { configure } = require("@pinefile/pine");\n\nconfigure({\n  // see options\n});\n\nmodule.exports = {\n  // tasks\n};\n')),(0,o.kt)("h2",{id:"with-function"},"With function"),(0,o.kt)("p",null,"The function will be given the existing configuration and the task name as a optional argument. The function should return a plain JavaScript object which will be merged into the existing configuration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { configure } = require("@pinefile/pine");\n\nconfigure((config) => ({\n  // see options\n}));\n\nmodule.exports = {\n  // tasks\n};\n')),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("p",null,"You can see all current options for ",(0,o.kt)("inlineCode",{parentName:"p"},"configure")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pinefile/pine/blob/master/packages/pine/src/config.ts#L9"},"here")),(0,o.kt)("h2",{id:"get-config"},"Get config"),(0,o.kt)("p",null,"You can always get the current configuration with ",(0,o.kt)("inlineCode",{parentName:"p"},"getConfig")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { getConfig } = require("@pinefile/pine");\n\nmodule.exports = {\n  config: () => {\n    const config = getConfig();\n    console.log(config);\n  },\n};\n')))}s.isMDXComponent=!0}}]);