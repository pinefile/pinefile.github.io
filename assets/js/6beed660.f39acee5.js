(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[729],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),f=c(t),d=a,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return t?r.createElement(m,i(i({ref:n},l),{},{components:t})):r.createElement(m,i({ref:n},l))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9064:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return u},toc:function(){return s},default:function(){return l}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i={},u={unversionedId:"advanced/plugins",id:"advanced/plugins",isDocsHomePage:!1,title:"Plugins",description:"There is to kind of plugins in Pine:",source:"@site/docs/advanced/plugins.md",sourceDirName:"advanced",slug:"/advanced/plugins",permalink:"/docs/advanced/plugins",editUrl:"https://github.com/pinefile/pinefile.github.io/edit/develop/docs/advanced/plugins.md",version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Custom executable",permalink:"/docs/advanced/custom-executable"},next:{title:"Split up tasks",permalink:"/docs/advanced/split-up-tasks"}},s=[{value:"Standalone functions",id:"standalone-functions",children:[]},{value:"Runner function",id:"runner-function",children:[]}],c={toc:s};function l(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There is to kind of plugins in Pine:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Standalone functions, e.g ",(0,o.kt)("a",{parentName:"li",href:"/docs/functions/shell"},"shell")," and ",(0,o.kt)("a",{parentName:"li",href:"/docs/functions/run"},"run")),(0,o.kt)("li",{parentName:"ul"},"Task function that takes three arguments and return a promise.")),(0,o.kt)("h2",{id:"standalone-functions"},"Standalone functions"),(0,o.kt)("p",null,"Most of the functions that Pine exports is standalone functions, e.g ",(0,o.kt)("a",{parentName:"p",href:"/docs/functions/shell"},"shell")," and ",(0,o.kt)("a",{parentName:"p",href:"/docs/functions/run"},"run"),", so writing your own functions is easy. You can use build-it functions like the ",(0,o.kt)("a",{parentName:"p",href:"/docs/functions/config"},"getConfig")," to receive the configuration object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const echo = console.log;\n\nmodule.exports = {\n  example: () => {\n    echo("Foo");\n  },\n};\n')),(0,o.kt)("h2",{id:"runner-function"},"Runner function"),(0,o.kt)("p",null,"This one is a bit more complex since the function you assign to the task takes three arguments which are the exported object from the Pinefile, the name of the task and a array of arguments."),(0,o.kt)("p",null,"The returning function can take a ",(0,o.kt)("inlineCode",{parentName:"p"},"done")," callback argument where you can send in errors. You can also return a promise reject."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  example: (pinefile, name, argv) => {\n    return () => {\n      console.log(name);\n    };\n  },\n};\n")),(0,o.kt)("p",null,"To resolve a task function in the ",(0,o.kt)("inlineCode",{parentName:"p"},"pinefile")," object you need to use ",(0,o.kt)("inlineCode",{parentName:"p"},"api.resolveTask")," function. This is because the object isn't the same as in your pinefile."),(0,o.kt)("p",null,"Example of how you can create your own runner and run a task in the same function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { api, log } = require('@pinefile/pine')\n\nmodule.exports = {\n  runner: async (pinefile, name, argv) => {\n    if (argv) {\n      return async () => {\n        const task = api.resolveTask(name, pinefile);\n        await task(argv);\n      };\n    }\n\n    // pinefile arg is argv at this point.\n    log.info(`Hello ${pinefile.name}`);\n  },\n}\n")),(0,o.kt)("p",null,"You can see different example of runner functions ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pinefile/pine/blob/master/packages/pine/test/fixtures/pinefile.runner.js"},"here")))}l.isMDXComponent=!0}}]);