(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{77:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return c})),t.d(e,"metadata",(function(){return a})),t.d(e,"toc",(function(){return u})),t.d(e,"default",(function(){return l}));var o=t(3),r=t(7),i=(t(0),t(92)),c={},a={unversionedId:"functions/config",id:"functions/config",isDocsHomePage:!1,title:"Configure",description:"Pine can be configured via the configure function, which accepts:",source:"@site/docs/functions/config.md",sourceDirName:"functions",slug:"/functions/config",permalink:"/docs/functions/config",editUrl:"https://github.com/pinefile/pinefile.github.io/edit/develop/docs/functions/config.md",version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Color",permalink:"/docs/functions/color"},next:{title:"Log",permalink:"/docs/functions/log"}},u=[{value:"With object",id:"with-object",children:[]},{value:"With function",id:"with-function",children:[]},{value:"Options",id:"options",children:[]},{value:"Get config",id:"get-config",children:[]}],s={toc:u};function l(n){var e=n.components,t=Object(r.a)(n,["components"]);return Object(i.b)("wrapper",Object(o.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Pine can be configured via the ",Object(i.b)("inlineCode",{parentName:"p"},"configure")," function, which accepts:"),Object(i.b)("h2",{id:"with-object"},"With object"),Object(i.b)("p",null,"The object will be merged into the existing configuration."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'const { configure } = require("@pinefile/pine");\n\nconfigure({\n  // see options\n});\n\nmodule.exports = {\n  // tasks\n};\n')),Object(i.b)("h2",{id:"with-function"},"With function"),Object(i.b)("p",null,"The function will be given the existing configuration and the task name as a optional argument. The function should return a plain JavaScript object which will be merged into the existing configuration."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'const { configure } = require("@pinefile/pine");\n\nconfigure((config) => ({\n  // see options\n}));\n\nmodule.exports = {\n  // tasks\n};\n')),Object(i.b)("h2",{id:"options"},"Options"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"{\n  /**\n   * Dynamic config properties.\n   */\n  [key: string]: any;\n\n  /**\n   * Array of dotenv files to load from root.\n   */\n  dotenv: string[];\n\n  /**\n   * Environment key-value pairs.\n   */\n  env: NodeJS.ProcessEnv;\n\n  /**\n   * Log level.\n   *\n   * @default 'info'\n   */\n  logLevel: 'error' | 'warn' | 'info' | 'silent';\n\n  /**\n   * Yargs options, key-value pairs.\n   *\n   * @link https://yargs.js.org/docs/#functions-optionskey-opt\n   */\n  options: OptionsType;\n\n  /**\n   * The root directory of Pinefile.\n   */\n  root: string;\n\n  /**\n   * Packages to preload before Pinefile is loaded.\n   */\n  require: string[];\n\n  /**\n   * Task name of the function that is executing.\n   */\n  task: string;\n}\n")),Object(i.b)("h2",{id:"get-config"},"Get config"),Object(i.b)("p",null,"You can always get the current configuration with ",Object(i.b)("inlineCode",{parentName:"p"},"getConfig")," function:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'const { getConfig } = require("@pinefile/pine");\n\nmodule.exports = {\n  config: () => {\n    const config = getConfig();\n    console.log(config);\n  },\n};\n')))}l.isMDXComponent=!0},92:function(n,e,t){"use strict";t.d(e,"a",(function(){return f})),t.d(e,"b",(function(){return b}));var o=t(0),r=t.n(o);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},i=Object.keys(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=r.a.createContext({}),l=function(n){var e=r.a.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},f=function(n){var e=l(n.components);return r.a.createElement(s.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.a.createElement(r.a.Fragment,{},e)}},g=r.a.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,c=n.parentName,s=u(n,["components","mdxType","originalType","parentName"]),f=l(t),g=o,b=f["".concat(c,".").concat(g)]||f[g]||p[g]||i;return t?r.a.createElement(b,a(a({ref:e},s),{},{components:t})):r.a.createElement(b,a({ref:e},s))}));function b(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,c=new Array(i);c[0]=g;var a={};for(var u in e)hasOwnProperty.call(e,u)&&(a[u]=e[u]);a.originalType=n,a.mdxType="string"==typeof n?n:o,c[1]=a;for(var s=2;s<i;s++)c[s]=t[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);