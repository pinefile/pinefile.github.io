"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[479],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=u(t),m=l,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||a;return t?r.createElement(d,o(o({ref:n},s),{},{components:t})):r.createElement(d,o({ref:n},s))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,o=new Array(a);o[0]=f;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5709:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=t(3117),l=(t(7294),t(3905));const a={},o="Parallel",i={unversionedId:"functions/parallel",id:"functions/parallel",title:"Parallel",description:"Run tasks that will be executed simultaneously.",source:"@site/docs/functions/parallel.md",sourceDirName:"functions",slug:"/functions/parallel",permalink:"/docs/functions/parallel",draft:!1,editUrl:"https://github.com/pinefile/pinefile.github.io/edit/develop/docs/functions/parallel.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Log",permalink:"/docs/functions/log"},next:{title:"Run",permalink:"/docs/functions/run"}},c={},u=[{value:"Combined tasks into one",id:"combined-tasks-into-one",level:2},{value:"Run multiple functions in parallel",id:"run-multiple-functions-in-parallel",level:2}],s={toc:u};function p(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"parallel"},"Parallel"),(0,l.kt)("p",null,"Run tasks that will be executed simultaneously."),(0,l.kt)("h2",{id:"combined-tasks-into-one"},"Combined tasks into one"),(0,l.kt)("p",null,"You can combine tasks into one, e.g have a default task for building everything."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import { parallel } from "@pinefile/pine";\n\nexport default {\n  example: parallel("line", "build"),\n  lint: () => {},\n  build: () => {},\n};\n')),(0,l.kt)("h2",{id:"run-multiple-functions-in-parallel"},"Run multiple functions in parallel"),(0,l.kt)("p",null,"Support both ",(0,l.kt)("inlineCode",{parentName:"p"},"callback"),"-format and asynchronous functions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import { log, parallel } from "@pinefile/pine";\n\nexport default {\n  example: async () => {\n    const tasks = [\n      (done) => {\n        log.push("callback");\n        done();\n      },\n      async () => {\n        return new Promise((resolve) => {\n          log.info("async");\n          resolve();\n        });\n      },\n    ];\n\n    await parallel(tasks);\n  },\n};\n')))}p.isMDXComponent=!0}}]);