"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[912],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=c(n),d=o,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1779:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=n(3117),o=(n(7294),n(3905));const i={},l="Shell",a={unversionedId:"functions/shell",id:"functions/shell",title:"Shell",description:"Run shell commands and returning output instead of log as run function does.",source:"@site/docs/functions/shell.md",sourceDirName:"functions",slug:"/functions/shell",permalink:"/docs/functions/shell",draft:!1,editUrl:"https://github.com/pinefile/pinefile.github.io/edit/develop/docs/functions/shell.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Series",permalink:"/docs/functions/series"},next:{title:"Utils",permalink:"/docs/functions/utils"}},s={},c=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"shell"},"Shell"),(0,o.kt)("p",null,"Run shell commands and returning output instead of log as ",(0,o.kt)("a",{parentName:"p",href:"/docs/functions/run"},"run")," function does."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { shell } from '@pinefile/pine';\n\nexport default {\n  example: async () => {\n    const gitLatestCommitID = await shell('git rev-parse HEAD');\n  },\n};\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("p",null,"All Execa ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/sindresorhus/execa#options"},"options")," can be used. Pine has some default values that are different from Execa:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"shell")," option is default ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," instead of ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," so shell-specific features can be used (for or example, ",(0,o.kt)("inlineCode",{parentName:"li"},"&&")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"||"),")")))}p.isMDXComponent=!0}}]);